const { firefox } = require("playwright");

const common = require("./common.js");

const markupInjScript = common.readFile("markup.js");

function sleep(ms) {
  return new Promise(resolve => setTimeout(resolve, ms));
}

async function validateAttack(bypassCSP, evalFunc) {
  let browser = await firefox.launch();
  let exploit = {
    uuid: '1337',
    url: 'https://test.info/test.html',
  };
    try {
    let context = await browser.newContext({
      ignoreHTTPSErrors: true,
      bypassCSP: bypassCSP
    });

    await context.addInitScript(markupInjScript);

       const page = await context.newPage();
          await page.goto(exploit.url, {
      referrer: "http://your-domain.com?thisisacrawler",
      timeout: 30000,
      waitUntil: "load"
    });
await sleep(10000);
      let res = await page.evaluate(evalFunc);
      console.log(`${JSON.stringify(res, null, 2)}`);

      await page.close();
  } catch(err) {
    console.error(err);
  } finally {
    await browser.close();
  }

}
(async function() {

  await validateAttack(true, 'evaluateTagAttack()');
  await validateAttack(false, 'evaluateTagAttack()');
  await validateAttack(true, 'evaluateAttributeAttack()');
  await validateAttack(false, 'evaluateAttributeAttack()');
})()
